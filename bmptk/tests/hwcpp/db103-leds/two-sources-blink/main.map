Archive member included because of file (symbol)

c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_udivsi3.o)
                              main.o (__aeabi_uidiv)
c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_dvmd_tls.o)
                              c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_udivsi3.o) (__aeabi_idiv0)

Allocating common symbols
Common symbol       size              file

__dso_handle        0x4               cortex_startup.o

Discarded input sections

 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .group         0x00000000        0x8 blink.o
 .text          0x00000000        0x0 blink.o
 .data          0x00000000        0x0 blink.o
 .bss           0x00000000        0x0 blink.o
 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE16initialize_clockEvE4done
                0x00000000        0x1 main.o
 .data._ZSt4cout
                0x00000000       0x14 main.o
 .text          0x00000000        0x0 cortex_startup.o
 .data          0x00000000        0x0 cortex_startup.o
 .bss           0x00000000        0x0 cortex_startup.o
 COMMON         0x00000000        0x4 cortex_startup.o
 .data          0x00000000        0x0 c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_udivsi3.o)
 .bss           0x00000000        0x0 c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_udivsi3.o)
 .data          0x00000000        0x0 c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_dvmd_tls.o)
 .bss           0x00000000        0x0 c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_dvmd_tls.o)

Memory Configuration

Name             Origin             Length             Attributes
rom              0x00000000         0x00008000         xr
ram              0x10000000         0x00001000         xrw
nul              0x20000000         0x00000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD blink.o
LOAD main.o
LOAD cortex_startup.o
LOAD c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/../../../../arm-none-eabi/lib/armv6-m\libstdc++.a
LOAD c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/../../../../arm-none-eabi/lib/armv6-m\libm.a
START GROUP
LOAD c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a
LOAD c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/../../../../arm-none-eabi/lib/armv6-m\libc.a
END GROUP
                0x00000400                __main_stack_size = 0x400
                0x00000000                __process_stack_size = 0x0
                [0x00000400]                PROVIDE (__main_stack_size, __main_stack_size)
                [0x00000000]                PROVIDE (__process_stack_size, __process_stack_size)
                0x00000000                __rom_start = ORIGIN (rom)
                0x00008000                __rom_size = 0x8000
                0x00008000                __rom_end = (__rom_start + __rom_size)
                0x10000000                __ram_start = ORIGIN (ram)
                0x00001000                __ram_size = 0x1000
                0x10001000                __ram_end = (__ram_start + __ram_size)
                [0x00000000]                PROVIDE (__rom_start, __rom_start)
                [0x00008000]                PROVIDE (__rom_size, __rom_size)
                [0x00008000]                PROVIDE (__rom_end, __rom_end)
                [0x10000000]                PROVIDE (__ram_start, __ram_start)
                [0x00001000]                PROVIDE (__ram_size, __ram_size)
                [0x10001000]                PROVIDE (__ram_end, __ram_end)

.text           0x00000000      0x4ec
                0x00000000                . = ALIGN (0x4)
                0x00000000                __text_start = .
                [0x00000000]                PROVIDE (__text_start, __text_start)
                0x00000000                . = ALIGN (0x4)
 *(.vectors)
 .vectors       0x00000000       0x20 cortex_startup.o
                0x00000000                __vectors
                0x00000020                . = ALIGN (0x4)
 *(.text .text.* .gnu.linkonce.t.*)
 .text._ZN5hwcpp37callback_administration_double_linkedINS_21timing_implementationINS_12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_64EEEE5_node5visitENS_15moment_durationIxLx24EE6momentE
                0x00000020        0x2 blink.o
                0x00000020                hwcpp::callback_administration_double_linked<hwcpp::timing_implementation<hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64> >::_node::visit(hwcpp::moment_duration<long long, 24ll>::moment)
 *fill*         0x00000022        0x6 
 .text._ZN5hwcpp13timing_waiterINS_12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_64EE3nowEv
                0x00000028       0x50 blink.o
                0x00000028                hwcpp::timing_waiter<hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64>::now()
 .text._ZN5hwcpp23callback_implementationINS_12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_64ENS_37callback_administration_double_linkedEE4waitENS_15moment_durationIxLx24EE6momentE
                0x00000078       0x84 blink.o
                0x00000078                hwcpp::callback_implementation<hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64, hwcpp::callback_administration_double_linked>::wait(hwcpp::moment_duration<long long, 24ll>::moment)
 .text._ZN5hwcpp23callback_implementationINS_12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_64ENS_37callback_administration_double_linkedEE4waitENS_15moment_durationIxLx24EE8durationE
                0x000000fc       0x1a blink.o
                0x000000fc                hwcpp::callback_implementation<hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64, hwcpp::callback_administration_double_linked>::wait(hwcpp::moment_duration<long long, 24ll>::duration)
 *fill*         0x00000116        0x2 
 .text._ZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE16initialize_clockEv
                0x00000118       0x48 blink.o
                0x00000118                hwcpp::lpc1114_base<4096, 32768, 48000000>::initialize_clock()
 .text._Z5blinkv
                0x00000160       0x78 blink.o
                0x00000160                blink()
 .text._ZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE4uartILj38400EE3putEc
                0x000001d8       0x10 main.o
                0x000001d8                hwcpp::lpc1114_base<4096, 32768, 48000000>::uart<38400u>::put(char)
 .text._ZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE16initialize_clockEv.part.7
                0x000001e8       0x44 main.o
 .text._ZNSt7ostream6fillerEi
                0x0000022c       0x1a main.o
                0x0000022c                std::ostream::filler(int)
 .text._ZStlsRSt7ostreamPKc
                0x00000246       0x5e main.o
                0x00000246                std::operator<<(std::ostream&, char const*)
 .text._ZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE4uartILj38400EE4initEv
                0x000002a4       0xb8 main.o
                0x000002a4                hwcpp::lpc1114_base<4096, 32768, 48000000>::uart<38400u>::init()
 .text.startup.main
                0x0000035c       0x64 main.o
                0x0000035c                main
 .text.__startup
                0x000003c0       0x54 cortex_startup.o
                0x000003c0                __startup
 .text          0x00000414       0x9c c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_udivsi3.o)
                0x00000414                __aeabi_uidiv
                0x00000414                __udivsi3
                0x0000049c                __aeabi_uidivmod
 .text          0x000004b0        0x4 c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_dvmd_tls.o)
                0x000004b0                __aeabi_idiv0
                0x000004b0                __aeabi_ldiv0
                0x000004b4                . = ALIGN (0x4)
 *(.glue_7t .glue_7)
 .glue_7        0x00000000        0x0 linker stubs
 .glue_7t       0x00000000        0x0 linker stubs
                0x000004b4                . = ALIGN (0x4)
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 *fill*         0x000004b4        0x4 
 .rodata._ZTVN5hwcpp37callback_administration_double_linkedINS_21timing_implementationINS_12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_64EEEE5_nodeE
                0x000004b8       0x10 blink.o
                0x000004b8                vtable for hwcpp::callback_administration_double_linked<hwcpp::timing_implementation<hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64> >::_node
 .rodata.str1.1
                0x000004c8       0x24 main.o
                                 0x26 (size before relaxing)
                0x000004ec                . = ALIGN (0x4)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x000004ec                . = ALIGN (0x4)
 *(.gcc_except_table)
                0x000004ec                . = ALIGN (0x4)
 *(.eh_frame_hdr)
                0x000004ec                . = ALIGN (0x4)
 *(.eh_frame)
                0x000004ec                . = ALIGN (0x4)
                0x000004ec                __text_end = .
                [0x000004ec]                PROVIDE (__text_end, __text_end)

.vfp11_veneer   0x000004ec        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x000004ec        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x000004ec        0x0
 .iplt          0x00000000        0x0 blink.o

.rel.dyn        0x000004ec        0x0
 .rel.iplt      0x00000000        0x0 blink.o

.IF_YOU_SEE_THIS_YOU_HAVE_ONE_OR_MORE_GLOBAL_OBJECT_CONSTRUCTORS
 *(.init)
 *(.preinit_array)
 *(SORT(.init_array.*))
 *(.init_array)
                0x000004ec                . = ALIGN (0x4)
                0x000004ec                __exidx_start = .
                [0x000004ec]                PROVIDE (__exidx_start, __exidx_start)

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x000004ec                . = ALIGN (0x4)
                0x000004ec                __exidx_end = .
                [0x000004ec]                PROVIDE (__exidx_end, __exidx_end)

.data           0x10000000       0x14 load address 0x000004ec
                0x10000000                . = ALIGN (0x4)
                0x000004ec                __data_init_start = LOADADDR (.data)
                [0x000004ec]                PROVIDE (__data_init_start, __data_init_start)
                0x10000000                __data_start = .
                [0x10000000]                PROVIDE (__data_start, __data_start)
                0x10000000                . = ALIGN (0x4)
 *(.data .data.* .gnu.linkonce.d.*)
 .data._ZSt4cout
                0x10000000       0x14 blink.o
                0x10000000                std::cout
                0x10000014                . = ALIGN (0x4)
                0x10000014                __data_end = .
                [0x10000014]                PROVIDE (__data_end, __data_end)

.igot.plt       0x10000014        0x0 load address 0x00000500
 .igot.plt      0x00000000        0x0 blink.o

.bss            0x10000018       0x30
                0x10000018                . = ALIGN (0x4)
                0x10000018                __bss_start = .
                [0x10000018]                PROVIDE (__bss_start, __bss_start)
                0x10000018                . = ALIGN (0x4)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss._ZZN5hwcpp37callback_administration_double_linkedINS_21timing_implementationINS_12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_64EEEE5_node8root_getEvE5_root
                0x10000018       0x18 blink.o
                0x10000018                hwcpp::callback_administration_double_linked<hwcpp::timing_implementation<hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64> >::_node::root_get()::_root
 .bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_643nowEvE4high
                0x10000030        0x8 blink.o
                0x10000030                hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64::now()::high
 .bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_643nowEvE8last_low
                0x10000038        0x4 blink.o
                0x10000038                hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64::now()::last_low
 .bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE16initialize_clockEvE4done
                0x1000003c        0x1 blink.o
                0x1000003c                hwcpp::lpc1114_base<4096, 32768, 48000000>::initialize_clock()::done
 *fill*         0x1000003d        0x3 
 .bss._ZN5hwcpp23callback_implementationINS_12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_64ENS_37callback_administration_double_linkedEE12lock_counterE
                0x10000040        0x4 blink.o
                0x10000040                hwcpp::callback_implementation<hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64, hwcpp::callback_administration_double_linked>::lock_counter
 .bss._ZGVZN5hwcpp37callback_administration_double_linkedINS_21timing_implementationINS_12lpc1114_baseILi4096ELi32768ELi48000000EE8timer_64EEEE5_node8root_getEvE5_root
                0x10000044        0x4 blink.o
                0x10000044                guard variable for hwcpp::callback_administration_double_linked<hwcpp::timing_implementation<hwcpp::lpc1114_base<4096, 32768, 48000000>::timer_64> >::_node::root_get()::_root
                0x10000048                . = ALIGN (0x4)
 *(COMMON)
                0x10000048                . = ALIGN (0x4)
                0x10000048                __bss_end = .
                [0x10000048]                PROVIDE (__bss_end, __bss_end)

.stack          0x10000048      0x400
                0x10000048                . = ALIGN (0x8)
                0x10000048                __stack_start = .
                [0x10000048]                PROVIDE (__stack_start, __stack_start)
                0x10000048                . = ALIGN (0x8)
                0x10000048                __main_stack_start = .
                [0x10000048]                PROVIDE (__main_stack_start, __main_stack_start)
                0x10000448                . = (. + __main_stack_size)
 *fill*         0x10000048      0x400 
                0x10000448                . = ALIGN (0x8)
                0x10000448                __main_stack_end = .
                [0x10000448]                PROVIDE (__main_stack_end, __main_stack_end)
                0x10000448                . = ALIGN (0x8)
                0x10000448                __process_stack_start = .
                [0x10000448]                PROVIDE (__process_stack_start, __process_stack_start)
                0x10000448                . = (. + __process_stack_size)
                0x10000448                . = ALIGN (0x8)
                0x10000448                __process_stack_end = .
                [0x10000448]                PROVIDE (__process_stack_end, __process_stack_end)
                0x10000448                . = ALIGN (0x8)
                0x10000448                __stack_end = .
                [0x10000448]                PROVIDE (__stack_end, __stack_end)
                0x10000448                . = ALIGN (0x4)
                0x10000448                __heap_start = .
                [0x10000448]                PROVIDE (__heap_start, __heap_start)
                0x10000448                . = ALIGN (0x4)
                0x10001000                __heap_end = __ram_end
                [0x10001000]                PROVIDE (__heap_end, __heap_end)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame    0x00000000       0x20
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_udivsi3.o)

.comment        0x00000000       0x70
 .comment       0x00000000       0x70 blink.o
                                 0x71 (size before relaxing)
 .comment       0x00000000       0x71 main.o
 .comment       0x00000000       0x71 cortex_startup.o

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x00000000       0x31
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x31 blink.o
 .ARM.attributes
                0x00000031       0x31 main.o
 .ARM.attributes
                0x00000062       0x31 cortex_startup.o
 .ARM.attributes
                0x00000093       0x1e c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_udivsi3.o)
 .ARM.attributes
                0x000000b1       0x1e c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a(_dvmd_tls.o)

/DISCARD/
 *(.note.GNU-stack)
                0x000004ec                PROVIDE (__text_size, (__text_end - __text_start))
                0x00000000                PROVIDE (__exidx_size, (__exidx_end - __exidx_start))
                0x00000014                PROVIDE (__data_size, (__data_end - __data_start))
                0x00000030                PROVIDE (__bss_size, (__bss_end - __bss_start))
                0x00000400                PROVIDE (__stack_size, (__stack_end - __stack_start))
                0x00000bb8                PROVIDE (__heap_size, (__heap_end - __heap_start))
OUTPUT(main.elf elf32-littlearm)

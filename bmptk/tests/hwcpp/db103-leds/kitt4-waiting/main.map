
Allocating common symbols
Common symbol       size              file

__dso_handle        0x4               cortex_startup.o

Discarded input sections

 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .group         0x00000000        0x8 main.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .data._ZSt4cout
                0x00000000       0x14 main.o
 .text          0x00000000        0x0 cortex_startup.o
 .data          0x00000000        0x0 cortex_startup.o
 .bss           0x00000000        0x0 cortex_startup.o
 COMMON         0x00000000        0x4 cortex_startup.o

Memory Configuration

Name             Origin             Length             Attributes
rom              0x00000000         0x00008000         xr
ram              0x10000000         0x00001000         xrw
nul              0x20000000         0x00000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD main.o
LOAD cortex_startup.o
LOAD c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/../../../../arm-none-eabi/lib/armv6-m\libstdc++.a
LOAD c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/../../../../arm-none-eabi/lib/armv6-m\libm.a
START GROUP
LOAD c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv6-m\libgcc.a
LOAD c:/program files (x86)/gnu tools arm embedded/4.8 2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/../../../../arm-none-eabi/lib/armv6-m\libc.a
END GROUP
                0x00000400                __main_stack_size = 0x400
                0x00000000                __process_stack_size = 0x0
                [0x00000400]                PROVIDE (__main_stack_size, __main_stack_size)
                [0x00000000]                PROVIDE (__process_stack_size, __process_stack_size)
                0x00000000                __rom_start = ORIGIN (rom)
                0x00008000                __rom_size = 0x8000
                0x00008000                __rom_end = (__rom_start + __rom_size)
                0x10000000                __ram_start = ORIGIN (ram)
                0x00001000                __ram_size = 0x1000
                0x10001000                __ram_end = (__ram_start + __ram_size)
                [0x00000000]                PROVIDE (__rom_start, __rom_start)
                [0x00008000]                PROVIDE (__rom_size, __rom_size)
                [0x00008000]                PROVIDE (__rom_end, __rom_end)
                [0x10000000]                PROVIDE (__ram_start, __ram_start)
                [0x00001000]                PROVIDE (__ram_size, __ram_size)
                [0x10001000]                PROVIDE (__ram_end, __ram_end)

.text           0x00000000      0x348
                0x00000000                . = ALIGN (0x4)
                0x00000000                __text_start = .
                [0x00000000]                PROVIDE (__text_start, __text_start)
                0x00000000                . = ALIGN (0x4)
 *(.vectors)
 .vectors       0x00000000       0x20 cortex_startup.o
                0x00000000                __vectors
                0x00000020                . = ALIGN (0x4)
 *(.text .text.* .gnu.linkonce.t.*)
 .text._ZN5hwcpp18port_out_from_pinsIINS_3allIINS_12lpc1114_baseILi4096ELi32768ELi48000000EE6pin_ocILi0ELi4EEENS3_17pin_in_out_pullupILi0ELi7EEENS3_20pin_in_out_ad_pullupILi1ELi2ELi3EEENS6_ILi1ELi5EEEEEENS1_IINS4_ILi0ELi5EEENS8_ILi1ELi0ELi1EEENS8_ILi1ELi3ELi4EEENS6_ILi1ELi8EEEEEENS1_IINS6_ILi0ELi6EEENS8_ILi1ELi1ELi2EEENS8_ILi1ELi4ELi5EEENS6_ILi1ELi9EEEEEEEE3setEj
                0x00000020       0xb0 main.o
                0x00000020                hwcpp::port_out_from_pins<hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_oc<0, 4>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<0, 7>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 2, 3>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 5> >, hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_oc<0, 5>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 0, 1>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 3, 4>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 8> >, hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<0, 6>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 1, 2>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 4, 5>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 9> > >::set(unsigned int)
                0x00000020                hwcpp::port_out_from_pins<hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_oc<0, 4>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<0, 7>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 2, 3>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 5> >, hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_oc<0, 5>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 0, 1>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 3, 4>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 8> >, hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<0, 6>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 1, 2>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 4, 5>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 9> > >::set(unsigned int)
 .text._ZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE10waiting_324waitEj
                0x000000d0       0x20 main.o
                0x000000d0                hwcpp::lpc1114_base<4096, 32768, 48000000>::waiting_32::wait(unsigned int)
 .text._ZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE16initialize_clockEv
                0x000000f0       0x48 main.o
                0x000000f0                hwcpp::lpc1114_base<4096, 32768, 48000000>::initialize_clock()
 .text._ZN5hwcpp18port_out_from_pinsIINS_3allIINS_12lpc1114_baseILi4096ELi32768ELi48000000EE6pin_ocILi0ELi5EEENS3_20pin_in_out_ad_pullupILi1ELi0ELi1EEENS6_ILi1ELi3ELi4EEENS3_17pin_in_out_pullupILi1ELi8EEEEEENS1_IINS9_ILi0ELi6EEENS6_ILi1ELi1ELi2EEENS6_ILi1ELi4ELi5EEENS9_ILi1ELi9EEEEEEEE4initEv
                0x00000138       0xfc main.o
                0x00000138                hwcpp::port_out_from_pins<hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_oc<0, 5>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 0, 1>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 3, 4>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 8> >, hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<0, 6>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 1, 2>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 4, 5>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 9> > >::init()
                0x00000138                hwcpp::port_out_from_pins<hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_oc<0, 5>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 0, 1>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 3, 4>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 8> >, hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<0, 6>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 1, 2>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 4, 5>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 9> > >::init()
 .text._ZN5hwcpp3allIINS_12lpc1114_baseILi4096ELi32768ELi48000000EE6pin_ocILi0ELi4EEENS2_17pin_in_out_pullupILi0ELi7EEENS2_20pin_in_out_ad_pullupILi1ELi2ELi3EEENS5_ILi1ELi5EEEEE4initEv
                0x00000234       0x88 main.o
                0x00000234                hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_oc<0, 4>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<0, 7>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 2, 3>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 5> >::init()
                0x00000234                hwcpp::all<hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_oc<0, 4>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<0, 7>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_ad_pullup<1, 2, 3>, hwcpp::lpc1114_base<4096, 32768, 48000000>::pin_in_out_pullup<1, 5> >::init()
 .text.startup.main
                0x000002bc       0x38 main.o
                0x000002bc                main
 .text.__startup
                0x000002f4       0x54 cortex_startup.o
                0x000002f4                __startup
                0x00000348                . = ALIGN (0x4)
 *(.glue_7t .glue_7)
 .glue_7        0x00000000        0x0 linker stubs
 .glue_7t       0x00000000        0x0 linker stubs
                0x00000348                . = ALIGN (0x4)
 *(.rodata .rodata.* .gnu.linkonce.r.*)
                0x00000348                . = ALIGN (0x4)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x00000348                . = ALIGN (0x4)
 *(.gcc_except_table)
                0x00000348                . = ALIGN (0x4)
 *(.eh_frame_hdr)
                0x00000348                . = ALIGN (0x4)
 *(.eh_frame)
                0x00000348                . = ALIGN (0x4)
                0x00000348                __text_end = .
                [0x00000348]                PROVIDE (__text_end, __text_end)

.vfp11_veneer   0x00000348        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00000348        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x00000348        0x0
 .iplt          0x00000000        0x0 main.o

.rel.dyn        0x00000348        0x0
 .rel.iplt      0x00000000        0x0 main.o

.IF_YOU_SEE_THIS_YOU_HAVE_ONE_OR_MORE_GLOBAL_OBJECT_CONSTRUCTORS
 *(.init)
 *(.preinit_array)
 *(SORT(.init_array.*))
 *(.init_array)
                0x00000348                . = ALIGN (0x4)
                0x00000348                __exidx_start = .
                [0x00000348]                PROVIDE (__exidx_start, __exidx_start)

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x00000348                . = ALIGN (0x4)
                0x00000348                __exidx_end = .
                [0x00000348]                PROVIDE (__exidx_end, __exidx_end)

.data           0x10000000        0x0 load address 0x00000348
                0x10000000                . = ALIGN (0x4)
                0x00000348                __data_init_start = LOADADDR (.data)
                [0x00000348]                PROVIDE (__data_init_start, __data_init_start)
                0x10000000                __data_start = .
                [0x10000000]                PROVIDE (__data_start, __data_start)
                0x10000000                . = ALIGN (0x4)
 *(.data .data.* .gnu.linkonce.d.*)
                0x10000000                . = ALIGN (0x4)
                0x10000000                __data_end = .
                [0x10000000]                PROVIDE (__data_end, __data_end)

.igot.plt       0x10000000        0x0 load address 0x00000348
 .igot.plt      0x00000000        0x0 main.o

.bss            0x10000000        0x4
                0x10000000                . = ALIGN (0x4)
                0x10000000                __bss_start = .
                [0x10000000]                PROVIDE (__bss_start, __bss_start)
                0x10000000                . = ALIGN (0x4)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss._ZZN5hwcpp12lpc1114_baseILi4096ELi32768ELi48000000EE16initialize_clockEvE4done
                0x10000000        0x1 main.o
                0x10000000                hwcpp::lpc1114_base<4096, 32768, 48000000>::initialize_clock()::done
                0x10000004                . = ALIGN (0x4)
 *fill*         0x10000001        0x3 
 *(COMMON)
                0x10000004                . = ALIGN (0x4)
                0x10000004                __bss_end = .
                [0x10000004]                PROVIDE (__bss_end, __bss_end)

.stack          0x10000004      0x404
                0x10000008                . = ALIGN (0x8)
 *fill*         0x10000004        0x4 
                0x10000008                __stack_start = .
                [0x10000008]                PROVIDE (__stack_start, __stack_start)
                0x10000008                . = ALIGN (0x8)
                0x10000008                __main_stack_start = .
                [0x10000008]                PROVIDE (__main_stack_start, __main_stack_start)
                0x10000408                . = (. + __main_stack_size)
 *fill*         0x10000008      0x400 
                0x10000408                . = ALIGN (0x8)
                0x10000408                __main_stack_end = .
                [0x10000408]                PROVIDE (__main_stack_end, __main_stack_end)
                0x10000408                . = ALIGN (0x8)
                0x10000408                __process_stack_start = .
                [0x10000408]                PROVIDE (__process_stack_start, __process_stack_start)
                0x10000408                . = (. + __process_stack_size)
                0x10000408                . = ALIGN (0x8)
                0x10000408                __process_stack_end = .
                [0x10000408]                PROVIDE (__process_stack_end, __process_stack_end)
                0x10000408                . = ALIGN (0x8)
                0x10000408                __stack_end = .
                [0x10000408]                PROVIDE (__stack_end, __stack_end)
                0x10000408                . = ALIGN (0x4)
                0x10000408                __heap_start = .
                [0x10000408]                PROVIDE (__heap_start, __heap_start)
                0x10000408                . = ALIGN (0x4)
                0x10001000                __heap_end = __ram_end
                [0x10001000]                PROVIDE (__heap_end, __heap_end)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x00000000       0x31
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x31 main.o
 .ARM.attributes
                0x00000031       0x31 cortex_startup.o

/DISCARD/
 *(.note.GNU-stack)
                0x00000348                PROVIDE (__text_size, (__text_end - __text_start))
                0x00000000                PROVIDE (__exidx_size, (__exidx_end - __exidx_start))
                0x00000000                PROVIDE (__data_size, (__data_end - __data_start))
                0x00000004                PROVIDE (__bss_size, (__bss_end - __bss_start))
                0x00000400                PROVIDE (__stack_size, (__stack_end - __stack_start))
                0x00000bf8                PROVIDE (__heap_size, (__heap_end - __heap_start))
OUTPUT(main.elf elf32-littlearm)

.comment        0x00000000       0x70
 .comment       0x00000000       0x70 main.o
                                 0x71 (size before relaxing)
 .comment       0x00000000       0x71 cortex_startup.o
